name: 'Setup Version in monorepo'
description: 'Set version of all packages in monorepo.'

branding:
  icon: type
  color: red

inputs:
  version:
    description: 'The version to update all packages to.'
    required: true
  manifest-file:
    description: 'The package to update the versions for.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Get New Version Number
      id: version
      run: |
        VERSION=$(basename ${{ inputs.version }})
        if [[ $VERSION != v* ]]; then
          echo "Invalid version number" 1>&2
          exit 1
        fi
        echo "VERSION=${VERSION:1}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Get Environment
      id: env
      run: |
        if [[ $(basename ${{ inputs.manifest-file }}) == "package.json" ]]; then
          ENV="npm"
        elif [[ $(basename ${{ inputs.manifest-file }}) == "Cargo.toml" ]]; then
          ENV="cargo"
        else
          echo "Unknown package type" 1>&2
          exit 1
        fi
        echo "ENV=$ENV" >> $GITHUB_OUTPUT
      shell: bash
    - name: Update npm Packages
      if: ${{ steps.env.outputs.ENV == 'npm' }}
      run: |
        sed -i 's/"version": ".*"/"version": "${{ steps.version.outputs.VERSION }}"/' ${{ inputs.manifest-file }}
        # TODO: Following should only happen in dependencies and not devDependencies
        # sed -i 's/"\*"/"${{ steps.version.outputs.VERSION }}"/' ${{ inputs.manifest-file }}
      shell: bash
    - name: Update Cargo Packages
      if: ${{ steps.env.outputs.ENV == 'cargo' }}
      run: |
        sed -i 's/^version = ".*"$/version = "${{ steps.version.outputs.VERSION }}"/' ${{ inputs.manifest-file }}
        # TODO: Following should only happen in dependencies and not dev-dependencies
        # sed -i 's/path = ".*"/version = "${{ steps.version.outputs.VERSION }}"/' ${{ inputs.manifest-file }}
      shell: bash
