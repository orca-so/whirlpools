"use strict";(self.webpackChunk_orca_so_whirlpools_docs=self.webpackChunk_orca_so_whirlpools_docs||[]).push([[554],{193:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/browser-dbdae1e16f2df45bc01428d348950e0a.png"},1184:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var o=t(4041);const r={},s=o.createContext(r);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(s.Provider,{value:n},e.children)}},1432:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/phantom02-a568979288da7ecce65affe230b1b4fa.png"},3582:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/phantom04-e1388f217bdf482f493bebc33dbf11f7.png"},4764:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Examples/Tour de Whirlpool/Setting Up Your Environment","title":"Setting Up Your Environment","description":"Let\'s start by setting up the environment we will need for Tour de Whirlpool.","source":"@site/docs/05-Examples/01-Tour de Whirlpool/02-Setting Up Your Environment.md","sourceDirName":"05-Examples/01-Tour de Whirlpool","slug":"/Examples/Tour de Whirlpool/Setting Up Your Environment","permalink":"/Examples/Tour de Whirlpool/Setting Up Your Environment","draft":false,"unlisted":false,"editUrl":"https://github.com/orca-so/whirlpools/tree/main/docs/whirlpool/docs/05-Examples/01-Tour de Whirlpool/02-Setting Up Your Environment.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Tutorial: Tour de Whirlpool","permalink":"/Examples/Tour de Whirlpool/Overview"},"next":{"title":"Obtain SOL and Tokens","permalink":"/Examples/Tour de Whirlpool/Obtain Sol and Tokens"}}');var r=t(1085),s=t(1184);const l={},i="Setting Up Your Environment",a={},d=[{value:"Preparing a development environment",id:"preparing-a-development-environment",level:2},{value:"Solana CLI",id:"solana-cli",level:3},{value:"Visual Studio Code",id:"visual-studio-code",level:3},{value:"Node.js",id:"nodejs",level:3},{value:"ts-node",id:"ts-node",level:3},{value:"Create the directory structure for development",id:"create-the-directory-structure-for-development",level:2},{value:"Create directories",id:"create-directories",level:3},{value:"Install the Whirlpools-SDK and other libraries needed for development",id:"install-the-whirlpools-sdk-and-other-libraries-needed-for-development",level:3},{value:"Create a typescript configuration file",id:"create-a-typescript-configuration-file",level:3},{value:"Prepare a development wallet",id:"prepare-a-development-wallet",level:2},{value:"Create a Chrome profile",id:"create-a-chrome-profile",level:3},{value:"Install Phantom",id:"install-phantom",level:3},{value:"Change the target cluster connection",id:"change-the-target-cluster-connection",level:3},{value:"Export the wallet created in Phantom",id:"export-the-wallet-created-in-phantom",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"setting-up-your-environment",children:"Setting Up Your Environment"})}),"\n",(0,r.jsx)(n.p,{children:"Let's start by setting up the environment we will need for Tour de Whirlpool."}),"\n",(0,r.jsx)(n.h2,{id:"preparing-a-development-environment",children:"Preparing a development environment"}),"\n",(0,r.jsx)(n.p,{children:"First we will set up the tools needed to create and execute programs. Let's set up the tools in the following order."}),"\n",(0,r.jsx)(n.h3,{id:"solana-cli",children:"Solana CLI"}),"\n",(0,r.jsx)(n.p,{children:"This application allows us to use Solana from the terminal or command line."}),"\n",(0,r.jsxs)(n.p,{children:["Refer to the ",(0,r.jsx)(n.a,{href:"https://solana.com/docs/intro/installation",children:"this page"})," to install the command line tools."]}),"\n",(0,r.jsx)(n.p,{children:"After installing the tools, verify the Solana CLI version on the command line. There should be no problem with version 1.10.8 or later."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ solana --version\nsolana-cli 1.10.8 (src:623ac656; feat;1122441720)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"visual-studio-code",children:"Visual Studio Code"}),"\n",(0,r.jsx)(n.p,{children:"This tutorial will use Visual Studio code as a TypeScript development environment. If you already have a preferred environment, feel free to skip installing Visual Studio Code."}),"\n",(0,r.jsxs)(n.p,{children:["Download the installer from the official link: ",(0,r.jsx)(n.a,{href:"https://code.visualstudio.com/download",children:"https://code.visualstudio.com/download"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Verify the installation was successful by starting the application."}),"\n",(0,r.jsx)(n.h3,{id:"nodejs",children:"Node.js"}),"\n",(0,r.jsx)(n.p,{children:"We will set up Node.js to enable running TypeScript outside of a browser environment."}),"\n",(0,r.jsxs)(n.p,{children:["Download the installer from the official link, and choose the recommended LTS version: ",(0,r.jsx)(n.a,{href:"https://nodejs.org/en/download/package-manager",children:"https://nodejs.org/en/download/package-manager"})]}),"\n",(0,r.jsx)(n.p,{children:"After completing the installation, verify the node version in the terminal or command prompt. There should be no problem with version 16.8.0 or later."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ node -v\nv16.8.0\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Make sure you can run the ",(0,r.jsx)(n.code,{children:"npm"})," command, which should have been installed at the same time."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ npm -v\n7.21.0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ts-node",children:"ts-node"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"node"})," command can execute JavaScript code. We will use the ",(0,r.jsx)(n.code,{children:"ts-node"})," command to make it easy to execute TypeScript with Node.js. Run the following command in the terminal or command prompt to install ",(0,r.jsx)(n.code,{children:"ts-node"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install -g ts-node\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After completing the installation, verify the ",(0,r.jsx)(n.code,{children:"ts-node"})," version in the terminal or command prompt."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ts-node\nv10.7.0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"create-the-directory-structure-for-development",children:"Create the directory structure for development"}),"\n",(0,r.jsx)(n.p,{children:"Create a directory (folder) to store the files created during development."}),"\n",(0,r.jsx)(n.h3,{id:"create-directories",children:"Create directories"}),"\n",(0,r.jsxs)(n.p,{children:["Move to a directory where you can freely create new directories. Then, create a directory named ",(0,r.jsx)(n.code,{children:"tour_de_whirlpool"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Run the following commands in the terminal or command prompt."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd somewhere\nmkdir tour_de_whirlpool\ncd tour_de_whirlpool\nmkdir src\n"})}),"\n",(0,r.jsx)(n.h3,{id:"install-the-whirlpools-sdk-and-other-libraries-needed-for-development",children:"Install the Whirlpools-SDK and other libraries needed for development"}),"\n",(0,r.jsx)(n.p,{children:"To interact with Whirlpools we will install the Whirlpools-SDK and its dependency, the Solana library."}),"\n",(0,r.jsxs)(n.p,{children:["Run the following commands in the terminal or command prompt from the ",(0,r.jsx)(n.code,{children:"tour_de_whirlpool"})," directory."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm init -y\nnpm install @orca-so/whirlpools-sdk\nnpm ls\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can verify the installation was successful by checking the output of the ",(0,r.jsx)(n.code,{children:"npm ls"}),' command, which should show "@orca-so/whirlpools-sdk@0.11.8"']}),"\n",(0,r.jsx)(n.p,{children:"There should be no problem if the version is later than 0.11.8."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'$ npm init -y\nWrote to /tour_de_whirlpool/package.json:\n{\n  "name": "tour_de_whirlpool",\n  "version": "1.0.0",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n}\n\n$ npm install @orca-so/whirlpools-sdk\nadded 738 packages, and audited 739 packages in 50s\n39 packages are looking for funding\nrun `npm fund` for details\nfound 0 vulnerabilities\n\n$ npm ls\ntour_de_whirlpool@1.0.0 .../tour_de_whirlpool\n\u2514\u2500\u2500 @orca-so/whirlpools-sdk@0.11.8\n'})}),"\n",(0,r.jsx)(n.p,{children:'We only install "Whirlpools-SDK" explicitly, but its dependency, the Solana library, is installed at the same time, so we are able to use it in our program as well.'}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"node_modules"})," directory should have been created in the current directory. Check the directory and verify that several libraries have been installed."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ ls node_modules\n@babel\n@ethersproject\n@metaplex-foundation\n@orca-so\n@project-serum\n@solana\n...\n...\nuuid\nwebidl-conversions\nwhatwg-url\nws\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-a-typescript-configuration-file",children:"Create a typescript configuration file"}),"\n",(0,r.jsx)(n.p,{children:"We will use tsconfig.json to configure TypeScript settings."}),"\n",(0,r.jsxs)(n.p,{children:['Create a file named "tsconfig.json" in the ',(0,r.jsx)(n.code,{children:"tour_de_whirlpool"})," directory and add the following contents."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n  "compilerOptions": {\n    "types": ["mocha", "chai"],\n    "typeRoots": ["./node_modules/@types"],\n    "lib": ["es2015"],\n    "module": "commonjs",\n    "target": "es6",\n    "esModuleInterop": true,\n    "resolveJsonModule": true,\n    "moduleResolution": "node"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"prepare-a-development-wallet",children:"Prepare a development wallet"}),"\n",(0,r.jsx)(n.p,{children:"Let's create a Solana wallet (account) to use in this tutorial."}),"\n",(0,r.jsx)(n.p,{children:"The wallet will be set up to work with Phantom, Typescript, as well as the Solana CLI. By doing this, we will be able to perform one-off actions and do manual verifications with Phantom and the CLI, but we will also be able to use the same wallet in our programs."}),"\n",(0,r.jsx)(n.p,{children:"Note: Because this wallet will be used in programs, be sure to keep it separate from any wallet holding actual assets. It would be a terrible to see your Solana assets wiped out due to an error in your code."}),"\n",(0,r.jsx)(n.h3,{id:"create-a-chrome-profile",children:"Create a Chrome profile"}),"\n",(0,r.jsx)(n.p,{children:"Because Phantom can manage multiple wallets, it is possible to add a new wallet to the Phantom wallet you are currently using. However, to avoid accidents, it is recommended that you create a new Chrome profile and keep your Phantom instances separate."}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.a,{href:"https://support.google.com/a/users/answer/9310144?hl=en#2.2",children:"following procedure"})," to create a new profile."]}),"\n",(0,r.jsx)(n.p,{children:"You can set your profile theme to customize the appearance. Making the appearance different from the profile you normally use, or other development environments, will make it easier to differentiate."}),"\n",(0,r.jsx)(n.p,{children:"Here is an example of a profile for daily use (left) vs a dedicated profile for the tutorial (right). This greatly reduces the risk of mistakenly interacting with the wrong profile. (Red means beware!)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"google workspaces",src:t(193).A+"",width:"2000",height:"669"})}),"\n",(0,r.jsx)(n.p,{children:"Besides using different profiles, using separate browsers is another way to differentiate. If you normally use Chrome, you can try using Edge or Brave for development."}),"\n",(0,r.jsx)(n.p,{children:"The advantage of using this method is that you can avoid the hassle of having to switch profiles."}),"\n",(0,r.jsx)(n.h3,{id:"install-phantom",children:"Install Phantom"}),"\n",(0,r.jsx)(n.p,{children:"Extensions are managed separately for each profile. Because of this, your newly created profile will not include the Phantom extension. Install Phantom again in your new profile."}),"\n",(0,r.jsxs)(n.p,{children:["You can install Phantom by clicking on the relevant browser icon link at the bottom of ",(0,r.jsx)(n.a,{href:"https://phantom.app/",children:"this page"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Once the installation is complete, follow the on-screen instructions to initialize a new wallet."}),"\n",(0,r.jsx)(n.p,{children:"Once the installation is complete, follow the on-screen instructions to initialize a new wallet."}),"\n",(0,r.jsx)(n.p,{children:"Now your new wallet has been initialized."}),"\n",(0,r.jsx)(n.p,{children:'Let\'s go ahead and change the name of the new wallet to "TourDeWhirlpool".'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"phantom01",src:t(5923).A+"",width:"360",height:"541"})}),"\n",(0,r.jsx)(n.h3,{id:"change-the-target-cluster-connection",children:"Change the target cluster connection"}),"\n",(0,r.jsx)(n.p,{children:"Tour de Whirlpool uses Devnet, a Solana network used for development."}),"\n",(0,r.jsx)(n.p,{children:"Change the target network to Devnet."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"phantom02",src:t(1432).A+"",width:"357",height:"541"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"phantom03",src:t(9697).A+"",width:"359",height:"537"})}),"\n",(0,r.jsx)(n.h3,{id:"export-the-wallet-created-in-phantom",children:"Export the wallet created in Phantom"}),"\n",(0,r.jsx)(n.p,{children:"Currently, the private key for your wallet only exists inside Phantom."}),"\n",(0,r.jsx)(n.p,{children:"As is, you cannot perform actions with your new wallet from TypeScript programs or the Solana CLI."}),"\n",(0,r.jsx)(n.p,{children:"To solve this, we can export the private key, and save it in a format that can be read in by TypeScript and the Solana CLI."}),"\n",(0,r.jsxs)(n.p,{children:["First, save a file named ",(0,r.jsx)(n.code,{children:"create_wallet_json.ts"})," including the following code in your ",(0,r.jsx)(n.code,{children:"tour_de_whirlpool"})," directory."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// create_wallet_json.ts\nimport bs58 from \"bs58\";\n\nconst wallet_json = \"wallet.json\";\n\nconst readline = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nreadline.question('secretKey(base58):', (secret_base58) => {\n    readline.close();\n    const secret_bytes = Uint8Array.from(bs58.decode(secret_base58.trim()));\n\n    // write file\n    const fs = require('fs')\n    fs.writeFileSync(wallet_json, `[${secret_bytes.toString()}]`);\n\n    // verify file\n    const secret_bytes_loaded = JSON.parse(fs.readFileSync(wallet_json));\n    const secret_base58_loaded = bs58.encode(Uint8Array.from(secret_bytes_loaded));\n    if ( secret_base58 === secret_base58_loaded ) {\n        console.log(`${wallet_json} created successfully!`);\n    }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next, return to Phantom and export your private key. When the key is displayed, copy it to your clipboard."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"phantom04",src:t(3582).A+"",width:"354",height:"539"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"phantom05",src:t(6599).A+"",width:"354",height:"536"})}),"\n",(0,r.jsxs)(n.p,{children:["In the terminal or command prompt, navigate to the ",(0,r.jsx)(n.code,{children:"tour_de_whirlpool"})," directory and execute ",(0,r.jsx)(n.code,{children:"create_wallet_json.ts"})," using ts-node."]}),"\n",(0,r.jsx)(n.p,{children:'When the program displays "secretKey(base58):", paste the private key you copied into your clipboard and press ENTER.'}),"\n",(0,r.jsx)(n.p,{children:'Verify that the output says "wallet.json created successfully!"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ cd tour_de_whirlpool\n$ ts-node create_wallet_json.ts secretKey(base58):xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx wallet.json created successfully!\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use the Solana CLI to display the public key, using the file you just created as a base.\nVerify that it matches the public key displayed in Phantom."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ solana address -k wallet.json\nFptVxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRAXB\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the procedure above we are going out of our way to use a program to convert the key. You may find sites online that will convert the key for you, but do not use these sites! If the site creator is a bad actor they can save your key and use it maliciously. Please perform all key conversions in your own environment."}),"\n",(0,r.jsx)(n.p,{children:"Now your development environment is ready to go!"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},5923:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/phantom01-d567eacd9ca75624efdb433b074a5061.png"},6599:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/phantom05-4a7d08fc229dd8a31fc4852857e8732b.png"},9697:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/phantom03-fe18ed4787d1d4d661e3a01ad33de217.png"}}]);