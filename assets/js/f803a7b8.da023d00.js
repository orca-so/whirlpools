"use strict";(self.webpackChunk_orca_so_whirlpools_docs=self.webpackChunk_orca_so_whirlpools_docs||[]).push([[868],{54:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,legacyInstallation:()=>u,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"SDKs/Environment Setup","title":"Environment Setup","description":"The legacy Whirlpools Typescript SDK (\\\\@orca-so/whirlpools-sdk\\\\) allows for easy interaction with a deployed Whirlpools program and is a solid choice if you are working the Solana Web3.js.","source":"@site/docs/03-SDKs/02-Environment Setup.mdx","sourceDirName":"03-SDKs","slug":"/SDKs/Environment Setup","permalink":"/SDKs/Environment Setup","draft":false,"unlisted":false,"editUrl":"https://github.com/orca-so/whirlpools/tree/main/docs/whirlpool/docs/03-SDKs/02-Environment Setup.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Environment Setup","hide_table_of_contents":true},"sidebar":"sidebar","previous":{"title":"Overview","permalink":"/SDKs/Overview"},"next":{"title":"Create Liquidity Pools","permalink":"/SDKs/Whirlpool Management/Create Pool"}}');var o=t(1085),s=t(1184),a=t(95),l=t(4435);const i={sidebar_label:"Environment Setup",hide_table_of_contents:!0},c="Environment Setup",d={},u='\n# Installation\n\nThe legacy Whirlpools Typescript SDK (`@orca-so/whirlpools-sdk`) allows for easy interaction with a deployed Whirlpools program and is a solid choice if you are working the Solana Web3.js.\n\nIn your project, run:\n\n```bash\nyarn add "@orca-so/whirlpools-sdk"\nyarn add "@orca-so/common-sdk"\nyarn add "@coral-xyz/anchor@0.29.0"\nyarn add "@solana/web3.js"\nyarn add "@solana/spl-token"\nyarn add "decimal.js"\n```\n',h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Initialize a new project",id:"1-initialize-a-new-project",level:2},{value:"2. Wallet Management",id:"2-wallet-management",level:2},{value:"3. Configure the Whirlpools SDK for Your Network",id:"3-configure-the-whirlpools-sdk-for-your-network",level:2},{value:"4. Airdrop SOL to Your Wallet",id:"4-airdrop-sol-to-your-wallet",level:2},{value:"5. Set the default funder for Transactions",id:"5-set-the-default-funder-for-transactions",level:2},{value:"Next steps",id:"next-steps",level:2},{value:"Prerequisites",id:"prerequisites-1",level:2},{value:"1. Initialize a new project",id:"1-initialize-a-new-project-1",level:2},{value:"2. Wallet Management",id:"2-wallet-management-1",level:2},{value:"3. Configure the Whirlpools SDK for Your Network",id:"3-configure-the-whirlpools-sdk-for-your-network-1",level:2},{value:"4. Airdrop SOL to Your Wallet",id:"4-airdrop-sol-to-your-wallet-1",level:2},{value:"5. Set the default funder for Transactions",id:"5-set-the-default-funder-for-transactions-1",level:2},{value:"Next steps",id:"next-steps-1",level:2},{value:"1. Initialize a new project",id:"1-initialize-a-new-project-2",level:2},{value:"2. Installation",id:"2-installation",level:2},{value:"3. Setup Whirlpool Context",id:"3-setup-whirlpool-context",level:2},{value:"Setup your context object with environment variables:",id:"setup-your-context-object-with-environment-variables",level:3},{value:"Setup for browser applications",id:"setup-for-browser-applications",level:3},{value:"Setup with Whirlpool Anchor test environment",id:"setup-with-whirlpool-anchor-test-environment",level:3}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"environment-setup",children:"Environment Setup"})}),"\n",(0,o.jsx)(n.p,{children:"This document covers the essential setup required to start building on Orca's SDK using the Whirlpools protocol. It includes installation, wallet setup, RPC client configuration, and the basics of interacting with the Solana ecosystem."}),"\n",(0,o.jsxs)(a.A,{groupId:"sdk-type",children:[(0,o.jsxs)(l.A,{value:"rust",label:"Rust",children:[(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),(0,o.jsxs)(n.p,{children:["Before you start, ensure you have Rust installed. To ensure compatibility with the Solana SDK v1.18, we recommend using ",(0,o.jsx)(n.code,{children:"rustc 1.78.0"}),"."]}),(0,o.jsx)(n.h2,{id:"1-initialize-a-new-project",children:"1. Initialize a new project"}),(0,o.jsx)(n.p,{children:"Initialize a new Rust project:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cargo new <project-name>\n"})}),(0,o.jsx)(n.p,{children:"Add the necessary dependencies to your project:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cargo add orca_whirlpools solana-sdk solana-client tokio serde_json\n"})}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note"}),": If you're using the Rust SDK in an already existing project which does not use the latest version of Solana SDK, you may need to apply a patchfile lock with the following command:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cargo update solana-sdk:<current-version> --precise <required-version>\n"})}),(0,o.jsxs)(n.p,{children:["You might also have to apply lockfile patches for ",(0,o.jsx)(n.code,{children:"solana-program"}),", ",(0,o.jsx)(n.code,{children:"solana-client"}),", ",(0,o.jsx)(n.code,{children:"solana-account-decoder"}),", ",(0,o.jsx)(n.code,{children:"spl-token"}),", ",(0,o.jsx)(n.code,{children:"spl-memo"}),", ",(0,o.jsx)(n.code,{children:"spl-token-2022"}),", ",(0,o.jsx)(n.code,{children:"spl-associated-token-account"}),"."]}),(0,o.jsx)(n.h2,{id:"2-wallet-management",children:"2. Wallet Management"}),(0,o.jsxs)(n.p,{children:["You can ",(0,o.jsx)(n.a,{href:"https://docs.solanalabs.com/cli/wallets/file-system",children:"generate a file system wallet using the Solana CLI"})," and load it in your program."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",children:'use solana_sdk::signer::keypair::Keypair;\nuse solana_sdk::signature::Signer;\nuse std::fs;\n\nfn main() {\n    let wallet_string = fs::read_to_string("path/to/wallet.json").unwrap();\n    let keypair_bytes: Vec<u8> = serde_json::from_str(&wallet_string).unwrap();\n    let wallet = Keypair::from_bytes(&keypair_bytes).unwrap();\n}\n'})}),(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\u26a0\ufe0f Important: Never share your private key publicly."}),"\n"]}),(0,o.jsx)(n.h2,{id:"3-configure-the-whirlpools-sdk-for-your-network",children:"3. Configure the Whirlpools SDK for Your Network"}),(0,o.jsxs)(n.p,{children:["Orca's Whirlpools SDK supports several networks: Solana Mainnet, Solana Devnet, Eclipse Mainnet, and Eclipse Testnet. To select a network, use the ",(0,o.jsx)(n.code,{children:"setWhirlpoolsConfig"})," function."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",children:"use orca_whirlpools::{WhirlpoolsConfigInput, set_whirlpools_config_address};\n\nfn main() {\n  set_whirlpools_config_address(WhirlpoolsConfigInput::SolanaDevnet).unwrap();\n  // Rest of the code\n}\n"})}),(0,o.jsx)(n.p,{children:"Available networks are:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"solanaMainnet"}),"\n",(0,o.jsx)(n.li,{children:"solanaDevnet"}),"\n",(0,o.jsx)(n.li,{children:"eclipseMainnet"}),"\n",(0,o.jsx)(n.li,{children:"eclipseTestnet"}),"\n"]}),(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u2139\ufe0f The ",(0,o.jsx)(n.code,{children:"set_whirlpools_config_address"})," function accepts either one of Orca's default network keys or a custom address. This allows you to specify a WhirlpoolsConfig account of your choice, including configurations not owned by Orca."]}),"\n"]}),(0,o.jsx)(n.h2,{id:"4-airdrop-sol-to-your-wallet",children:"4. Airdrop SOL to Your Wallet"}),(0,o.jsxs)(n.p,{children:["Once your wallet is created, you will need some SOL to pay for transactions. You can request an airdrop of SOL from the network, but this is only available on ",(0,o.jsx)(n.strong,{children:"Solana Devnet"})," and ",(0,o.jsx)(n.strong,{children:"Ecipse Testnet"}),"."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",children:'use solana_client::rpc_client::RpcClient;\nuse solana_sdk::signature::Signer;\n\nfn main() {\n  // Rest of the code\n  let rpc_client = RpcClient::new("https://api.devnet.solana.com");\n  match rpc_client.request_airdrop(&wallet.pubkey(), 1_000_000_000) {\n      Ok(signature) => println!("Airdrop successful. Transactoin signature: {:?}", signature),\n      Err(e) => println!("Error: {:?}", e),\n  }\n}\n'})}),(0,o.jsx)(n.h2,{id:"5-set-the-default-funder-for-transactions",children:"5. Set the default funder for Transactions"}),(0,o.jsxs)(n.p,{children:["After funding your wallet, you can set the wallet as the ",(0,o.jsx)(n.strong,{children:"FUNDER"})," for future transactions within the SDK. The funder is the account that will cover the transaction costs for initializing pools, providing liquidity, etc."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-rust",children:"use orca_whirlpools::{set_funder};\nuse solana_sdk::signature::Signer;\n\nfn main() {\n  // Rest of the code\n  set_funder(wallet.pubkey()).unwrap();\n}\n"})}),(0,o.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),(0,o.jsx)(n.p,{children:"Once you've completed the setup, you can move on to building more complex functionalities using the Orca SDK, such as creating and managing pools, providing liquidity, etc. Refer to individual function documentation to use this wallet setup in action."})]}),(0,o.jsxs)(l.A,{value:"ts-kit",label:"TypeScript Kit",children:[(0,o.jsx)(n.h2,{id:"prerequisites-1",children:"Prerequisites"}),(0,o.jsxs)(n.p,{children:["Before you start, ensure you have Node.js version 20 or higher installed on your machine. Download it from the official website: ",(0,o.jsx)(n.a,{href:"https://nodejs.org/",children:"https://nodejs.org/"}),"."]}),(0,o.jsx)(n.h2,{id:"1-initialize-a-new-project-1",children:"1. Initialize a new project"}),(0,o.jsx)(n.p,{children:"Create a new project directory:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkdir <project-name>\ncd <project-name>\n"})}),(0,o.jsx)(n.p,{children:"Initialize a new Node.js project:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm init -y\n"})}),(0,o.jsx)(n.p,{children:"Install the necessary packages:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install typescript @orca-so/whirlpools @solana/kit\n"})}),(0,o.jsx)(n.p,{children:"Initialize the project as a TypeScript project:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx tsc --init\n"})}),(0,o.jsx)(n.h2,{id:"2-wallet-management-1",children:"2. Wallet Management"}),(0,o.jsxs)(n.p,{children:["You can ",(0,o.jsx)(n.a,{href:"https://docs.solanalabs.com/cli/wallets/file-system",children:"generate a file system wallet using the Solana CLI"})," and load it in your program."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { createKeyPairSignerFromBytes } from '@solana/kit';\nimport fs from 'fs';\n\nconst keyPairBytes = new Uint8Array(JSON.parse(fs.readFileSync('path/to/solana-keypair.json', 'utf8')));\nconst wallet = await createKeyPairSignerFromBytes(keyPairBytes);\n"})}),(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\u26a0\ufe0f Important: Never share your private key publicly."}),"\n"]}),(0,o.jsx)(n.h2,{id:"3-configure-the-whirlpools-sdk-for-your-network-1",children:"3. Configure the Whirlpools SDK for Your Network"}),(0,o.jsxs)(n.p,{children:["Orca's Whirlpools SDK supports several networks: Solana Mainnet, Solana Devnet, Eclipse Mainnet, and Eclipse Testnet. To select a network, use the ",(0,o.jsx)(n.code,{children:"setWhirlpoolsConfig"})," function."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { setWhirlpoolsConfig } from '@orca-so/whirlpools';\n\nawait setWhirlpoolsConfig('solanaDevnet');\n"})}),(0,o.jsx)(n.p,{children:"Available networks are:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"solanaMainnet"}),"\n",(0,o.jsx)(n.li,{children:"solanaDevnet"}),"\n",(0,o.jsx)(n.li,{children:"eclipseMainnet"}),"\n",(0,o.jsx)(n.li,{children:"eclipseTestnet"}),"\n"]}),(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u2139\ufe0f The ",(0,o.jsx)(n.code,{children:"setWhirlpoolsConfig"})," function accepts either one of Orca's default network keys or a custom ",(0,o.jsx)(n.code,{children:"Address"}),". This allows you to specify a WhirlpoolsConfig account of your choice, including configurations not owned by Orca."]}),"\n"]}),(0,o.jsx)(n.h2,{id:"4-airdrop-sol-to-your-wallet-1",children:"4. Airdrop SOL to Your Wallet"}),(0,o.jsxs)(n.p,{children:["Once your wallet is created, you will need some SOL to pay for transactions. You can request an airdrop of SOL from the network, but this is only available on ",(0,o.jsx)(n.strong,{children:"Solana Devnet"})," and ",(0,o.jsx)(n.strong,{children:"Ecipse Testnet"}),"."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { generateKeyPair, createSolanaRpc, devnet, getAddressFromPublicKey } from '@solana/kit';\n\nconst devnetRpc = createSolanaRpc(devnet('https://api.devnet.solana.com'));\nconst wallet = await generateKeyPairSigner();\ndevnetRpc.requestAirdrop(\n  wallet.address,\n  lamports(1000000000n)\n).send()\n"})}),(0,o.jsx)(n.h2,{id:"5-set-the-default-funder-for-transactions-1",children:"5. Set the default funder for Transactions"}),(0,o.jsxs)(n.p,{children:["After funding your wallet, you can set the wallet as the ",(0,o.jsx)(n.strong,{children:"FUNDER"})," for future transactions within the SDK. The funder is the account that will cover the transaction costs for initializing pools, providing liquidity, etc."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { setDefaultFunder } from '@orca-so/whirlpools';\n\nsetDefaultFunder(wallet);\n"})}),(0,o.jsx)(n.h2,{id:"next-steps-1",children:"Next steps"}),(0,o.jsx)(n.p,{children:"Once you've completed the setup, you can move on to building more complex functionalities using the Orca SDK, such as creating and managing pools, providing liquidity, etc. Refer to individual function documentation to use this wallet setup in action."})]}),(0,o.jsxs)(l.A,{value:"ts-legacy",label:"TypeScript Legacy",children:[(0,o.jsx)(n.h2,{id:"1-initialize-a-new-project-2",children:"1. Initialize a new project"}),(0,o.jsx)(n.p,{children:"Create a new project directory:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkdir <project-name>\ncd <project-name>\n"})}),(0,o.jsx)(n.p,{children:"Initialize a new Node.js project:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm init -y\n"})}),(0,o.jsx)(n.h2,{id:"2-installation",children:"2. Installation"}),(0,o.jsxs)(n.p,{children:["The legacy Whirlpools Typescript SDK (",(0,o.jsx)(n.code,{children:"@orca-so/whirlpools-sdk"}),") allows for easy interaction with a deployed Whirlpools program and is a solid choice if you are working with Solana Web3.js."]}),(0,o.jsx)(n.p,{children:"In your project, run:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'yarn add "@orca-so/whirlpools-sdk"\nyarn add "@orca-so/common-sdk"\nyarn add "@coral-xyz/anchor@0.29.0"\nyarn add "@solana/web3.js"\nyarn add "@solana/spl-token"\nyarn add "decimal.js"\n'})}),(0,o.jsx)(n.h2,{id:"3-setup-whirlpool-context",children:"3. Setup Whirlpool Context"}),(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://dev.orca.so/legacy/classes/WhirlpoolContext.html",children:"WhirlpoolContext"})," object provides the necessary environment information to build and send transactions and is core to running many functions in the SDK."]}),(0,o.jsx)(n.h3,{id:"setup-your-context-object-with-environment-variables",children:"Setup your context object with environment variables:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { WhirlpoolContext, ORCA_WHIRLPOOL_PROGRAM_ID } from "@orca-so/whirlpools-sdk";\nimport { Provider } from "@coral-xyz/anchor";\n\nconst provider = Provider.env();\nconst ctx = WhirlpoolContext.withProvider(provider, ORCA_WHIRLPOOL_PROGRAM_ID);\n'})}),(0,o.jsx)(n.p,{children:"You can feed in the environment variables like so in bash:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ANCHOR_PROVIDER_URL=<CLUSTER URL> ANCHOR_WALLET=<WALLET PATH> ts-node index.ts\n"})}),(0,o.jsx)(n.h3,{id:"setup-for-browser-applications",children:"Setup for browser applications"}),(0,o.jsx)(n.p,{children:"The context relies on Anchor's Wallet interface. Implement your own wallet interface or find one of the sample implementations in the community and feed it into the context object."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Anchor Wallet Definition\nexport interface Wallet {\n  signTransaction(tx: Transaction): Promise<Transaction>;\n  signAllTransactions(txs: Transaction[]): Promise<Transaction[]>;\n  publicKey: PublicKey;\n}\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const connection = new Connection(url, "confirmed"};\nconst wallet = new Wallet()\nconst ctx = WhirlpoolContext.from(connection, wallet, whirlpoolProgramId);\n'})}),(0,o.jsx)(n.h3,{id:"setup-with-whirlpool-anchor-test-environment",children:"Setup with Whirlpool Anchor test environment"}),(0,o.jsx)(n.p,{children:"Provided you have set up the anchor environment, you can reference the program directly and build from there."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const provider = anchor.Provider.local();\nanchor.setProvider(anchor.Provider.env());\nconst program = anchor.workspace.Whirlpool;\nconst ctx = WhirlpoolContext.fromWorkspace(provider, program);\n"})}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note"}),": When configuring the network, you'll need to specify the Whirlpools Config address for the network you're using:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'// For Devnet\nconst DEVNET_WHIRLPOOLS_CONFIG = new PublicKey("FcrweFY1G9HJAHG5inkGB6pKg1HZ6x9UC2WioAfWrGkR");\n// For Mainnet\nconst MAINNET_WHIRLPOOLS_CONFIG = new PublicKey("2LecshUwdy9xi7meFgHtFJQNSKk4KdTrcpvaB56dP2NQ");\n'})})]})]})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},95:(e,n,t)=>{t.d(n,{A:()=>b});var r=t(4041),o=t(4357),s=t(5245),a=t(6090),l=t(3190),i=t(838),c=t(6423),d=t(6326);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:o}}=e;return{value:n,label:t,attributes:r,default:o}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const o=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})}),[s,o])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,s=h(e),[a,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,u]=f({queryString:t,groupId:o}),[m,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,s]=(0,d.Dv)(t);return[o,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:o}),j=(()=>{const e=c??m;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{j&&i(j)}),[j]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),x(e)}),[u,x,s]),tabValues:s}}var x=t(1310);const j={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};var g=t(1085);function w(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=i.indexOf(n),o=l[t].value;o!==r&&(c(n),a(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{i.push(e)},onKeyDown:u,onClick:d,...s,className:(0,o.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=m(e);return(0,g.jsxs)("div",{className:(0,o.A)("tabs-container",j.tabList),children:[(0,g.jsx)(w,{...n,...e}),(0,g.jsx)(v,{...n,...e})]})}function b(e){const n=(0,x.A)();return(0,g.jsx)(y,{...e,children:u(e.children)},String(n))}},1184:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(4041);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},4435:(e,n,t)=>{t.d(n,{A:()=>a});t(4041);var r=t(4357);const o={tabItem:"tabItem_OMyP"};var s=t(1085);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,a),hidden:t,children:n})}}}]);