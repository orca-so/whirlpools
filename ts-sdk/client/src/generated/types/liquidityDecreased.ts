/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI32Decoder,
  getI32Encoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from "@solana/kit";

export type LiquidityDecreased = {
  whirlpool: Address;
  position: Address;
  tickLowerIndex: number;
  tickUpperIndex: number;
  liquidity: bigint;
  tokenAAmount: bigint;
  tokenBAmount: bigint;
  tokenATransferFee: bigint;
  tokenBTransferFee: bigint;
};

export type LiquidityDecreasedArgs = {
  whirlpool: Address;
  position: Address;
  tickLowerIndex: number;
  tickUpperIndex: number;
  liquidity: number | bigint;
  tokenAAmount: number | bigint;
  tokenBAmount: number | bigint;
  tokenATransferFee: number | bigint;
  tokenBTransferFee: number | bigint;
};

export function getLiquidityDecreasedEncoder(): FixedSizeEncoder<LiquidityDecreasedArgs> {
  return getStructEncoder([
    ["whirlpool", getAddressEncoder()],
    ["position", getAddressEncoder()],
    ["tickLowerIndex", getI32Encoder()],
    ["tickUpperIndex", getI32Encoder()],
    ["liquidity", getU128Encoder()],
    ["tokenAAmount", getU64Encoder()],
    ["tokenBAmount", getU64Encoder()],
    ["tokenATransferFee", getU64Encoder()],
    ["tokenBTransferFee", getU64Encoder()],
  ]);
}

export function getLiquidityDecreasedDecoder(): FixedSizeDecoder<LiquidityDecreased> {
  return getStructDecoder([
    ["whirlpool", getAddressDecoder()],
    ["position", getAddressDecoder()],
    ["tickLowerIndex", getI32Decoder()],
    ["tickUpperIndex", getI32Decoder()],
    ["liquidity", getU128Decoder()],
    ["tokenAAmount", getU64Decoder()],
    ["tokenBAmount", getU64Decoder()],
    ["tokenATransferFee", getU64Decoder()],
    ["tokenBTransferFee", getU64Decoder()],
  ]);
}

export function getLiquidityDecreasedCodec(): FixedSizeCodec<
  LiquidityDecreasedArgs,
  LiquidityDecreased
> {
  return combineCodec(
    getLiquidityDecreasedEncoder(),
    getLiquidityDecreasedDecoder(),
  );
}
